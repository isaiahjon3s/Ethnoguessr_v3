import sqlite3

def create_tables(path):
    dir = path
            
    conn = sqlite3.connect(auth.db)
    c = conn.cursor()
    
    c.execute("CREATE TABLE IF NOT EXISTS pictures (ID INTEGER PRIMARY KEY AUTOINCREMENT, LINK TEXT NOT NULL, COORDINATES TEXT NOT NULL, SHOW_IN_CONTINUOUS INTEGER NOT NULL);")
    c.execute("CREATE TABLE IF NOT EXISTS users (ID INTEGER PRIMARY KEY AUTOINCREMENT, USERNAME TEXT NOT NULL, EMAIL TEXT, CONFIRMED INTEGER NOT NULL, NGAMES INTEGER NOT NULL, CUM_SCORE INTEGER NOT NULL);")
    c.execute("CREATE TABLE IF NOT EXISTS challenges (ID INTEGER PRIMARY KEY AUTOINCREMENT, CHNUM TEXT NOT NULL);")
    
    # Relations
    c.execute("CREATE TABLE IF NOT EXISTS picture_challenge (ID INTEGER PRIMARY KEY AUTOINCREMENT, ROUND INTEGER NOT NULL, PICTUREID INTEGER REFERENCES pictures(id), CHALLENGEID INTEGER REFERENCES challenges(id));")
    c.execute("CREATE TABLE IF NOT EXISTS user_challenge (ID INTEGER PRIMARY KEY AUTOINCREMENT, FINISHED_ROUNDS INTEGER NOT NULL, SCORE INTEGER NOT NULL, USERID INTEGER REFERENCES users(id), CHALLENGEID INTEGER REFERENCES challenges(id));")
    
    # Daily Challenge tables
    c.execute("CREATE TABLE IF NOT EXISTS daily_challenges (ID INTEGER PRIMARY KEY AUTOINCREMENT, DATE TEXT NOT NULL, TOTAL_SCORE INTEGER DEFAULT 0);")
    c.execute("CREATE TABLE IF NOT EXISTS daily_challenge_rounds (ID INTEGER PRIMARY KEY AUTOINCREMENT, CHALLENGE_ID INTEGER REFERENCES daily_challenges(id), ROUND_NUMBER INTEGER NOT NULL, PICTURE_ID INTEGER REFERENCES pictures(id), SCORE INTEGER DEFAULT 0);")
    
    # Session tracking table
    c.execute("CREATE TABLE IF NOT EXISTS session_images (ID INTEGER PRIMARY KEY AUTOINCREMENT, SESSION_ID TEXT NOT NULL, PICTURE_ID INTEGER REFERENCES pictures(id));")
    
    conn.commit()
    conn.close() 